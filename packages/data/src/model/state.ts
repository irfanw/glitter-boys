import { z } from "zod";

import { PlayerConfigEntrySchema } from "./playerConfigEntry.js";
import { RankSchema } from "./rank.js";
import _ from "lodash";
import { PlayerConfig } from "./playerConfig.js";

export type GameState = z.infer<typeof GameStateSchema>;
export const GameStateSchema = z.strictObject({
  // a way to uniquely identify this entry
  // generated by the application
  uuid: z.string(),
  // the time that this was added to the state
  added: z.string().pipe(z.coerce.date()),
  // the match id from the Riot API
  matchId: z.number(),
  player: PlayerConfigEntrySchema,
  rank: RankSchema,
});

export type State = z.infer<typeof StateSchema>;
export const StateSchema = z.strictObject({
  gamesStarted: z.array(GameStateSchema),
});

export function getPlayersNotInGame(players: PlayerConfig, state: State) {
  return _.reject(players, (player) =>
    _.some(
      state.gamesStarted,
      (game) => game.player.league.leagueAccount.accountId === player.league.leagueAccount.accountId,
    ),
  );
}
